[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openperturbation"
version = "1.0.0"
description = "A comprehensive platform for perturbation biology analysis using advanced AI/ML techniques"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
maintainers = [
    {name = "Nik Jois", email = "nikjois@llamasearch.ai"}
]
keywords = [
    "perturbation-biology",
    "causal-discovery", 
    "multimodal-fusion",
    "explainable-ai",
    "bioinformatics",
    "machine-learning",
    "fastapi",
    "pytorch"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed"
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "omegaconf>=2.3.0",
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "torch>=2.0.0",
    "torchvision>=0.15.0",
    "scikit-learn>=1.3.0",
    "causal-learn>=0.1.3.3",
    "biopython>=1.81",
    "rdkit-pypi>=2022.9.5",
    "Pillow>=10.0.0",
    "opencv-python>=4.8.0",
    "albumentations>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "plotly>=5.15.0",
    "python-multipart>=0.0.6",
    "aiofiles>=23.0.0",
    "httpx>=0.25.0",
    "psutil>=5.9.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pyright>=1.1.320",
    "pre-commit>=3.4.0"
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocs-mermaid2-plugin>=1.1.0"
]
production = [
    "gunicorn>=21.2.0",
    "prometheus-client>=0.17.0",
    "sentry-sdk>=1.32.0"
]
all = [
    "openperturbation[dev,docs,production]"
]

[project.urls]
Homepage = "https://github.com/llamasearchai/OpenPerturbation"
Documentation = "https://github.com/llamasearchai/OpenPerturbation#readme"
Repository = "https://github.com/llamasearchai/OpenPerturbation.git"
Issues = "https://github.com/llamasearchai/OpenPerturbation/issues"
Changelog = "https://github.com/llamasearchai/OpenPerturbation/releases"

[project.scripts]
openperturbation = "src.api.server:main"
openperturbation-api = "src.api.server:main"
openperturbation-pipeline = "src.pipeline.openperturbation_pipeline:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | openperturbation-env
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src", "openperturbation"]
skip_glob = ["openperturbation-env/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "openperturbation-env/",
    "venv/",
    "build/",
    "dist/"
]

[[tool.mypy.overrides]]
module = [
    "torch.*",
    "torchvision.*",
    "sklearn.*",
    "cv2.*",
    "rdkit.*",
    "Bio.*",
    "causallearn.*",
    "albumentations.*",
    "plotly.*",
    "seaborn.*"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "api: marks tests as API tests"
]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/openperturbation-env/*",
    "*/venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

[tool.bandit]
exclude_dirs = ["tests", "openperturbation-env", "venv"]
skips = ["B101", "B601"] 